// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(EduCatContext))]
    [Migration("20241027052004_CriacaoTabelaUsuario")]
    partial class CriacaoTabelaUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Model.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int?>("EstadoCivil")
                        .HasColumnType("integer");

                    b.Property<int?>("Genero")
                        .HasColumnType("integer");

                    b.Property<int>("Matricula")
                        .HasColumnType("integer");

                    b.Property<string>("Nacionalidade")
                        .HasColumnType("text");

                    b.Property<string>("Naturalidade")
                        .HasColumnType("text");

                    b.Property<int?>("Nivel")
                        .HasColumnType("integer");

                    b.Property<string>("NomeCivil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeMae")
                        .HasColumnType("text");

                    b.Property<string>("NomePai")
                        .HasColumnType("text");

                    b.Property<string>("NomeSocial")
                        .HasColumnType("text");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RG")
                        .HasColumnType("text");

                    b.Property<int?>("Raca")
                        .HasColumnType("integer");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.Property<int?>("TipoSanguineo")
                        .HasColumnType("integer");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Model.Entities.Usuario", b =>
                {
                    b.OwnsOne("Model.Entities.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("integer");

                            b1.Property<string>("Bairro")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("CEP")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)")
                                .HasColumnName("CEP");

                            b1.Property<string>("Complemento")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("Complemento");

                            b1.Property<string>("Logradouro")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("Logradouro");

                            b1.Property<string>("Municipio")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("Municipio");

                            b1.Property<int?>("Numero")
                                .HasColumnType("integer")
                                .HasColumnName("Numero");

                            b1.Property<string>("Pais")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("Pais");

                            b1.Property<string>("UF")
                                .HasMaxLength(2)
                                .HasColumnType("character varying(2)")
                                .HasColumnName("UF");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
